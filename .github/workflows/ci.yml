name: CI for Django Backend 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Check if secrets are set
      run: |
        if [ -z "${{ secrets.DOCKER_HUB_USERNAME }}" ]; then
          echo "DOCKER_HUB_USERNAME is not set"
        else
          echo "DOCKER_HUB_USERNAME is set"
        fi
        if [ -z "${{ secrets.DOCKER_HUB_TOKEN }}" ]; then
          echo "DOCKER_HUB_TOKEN is not set"
        else
          echo "DOCKER_HUB_TOKEN is set"
        fi

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request' || github.repository == github.event.pull_request.head.repo.full_name
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build Docker image for Backend
      run: |
        docker build -t ecommerce-backend:latest . --load

    - name: Run Django Tests in Docker Container
      run: |
        # Start a temporary PostgreSQL container for tests
        docker run -d --name temp_db_for_tests \
          -e POSTGRES_DB=test_db \
          -e POSTGRES_USER=test_user \
          -e POSTGRES_PASSWORD=test_password \
          postgres:16-alpine

        # Run Django tests inside the backend container, linking to the temp DB
        docker run --rm \
          --link temp_db_for_tests:db \
          -e DB_NAME=test_db \
          -e DB_USER=test_user \
          -e DB_PASSWORD=test_password \
          -e DB_HOST=db \
          -e DB_PORT=5432 \
          ecommerce-backend:latest python manage.py test

        # Clean up the temporary database container
        docker stop temp_db_for_tests
        docker rm temp_db_for_tests

    - name: Tag and Push Docker image to Docker Hub
      if: github.event_name != 'pull_request' || github.repository == github.event.pull_request.head.repo.full_name
      run: |
        DOCKER_HUB_IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-backend:latest
        docker tag ecommerce-backend:latest ${DOCKER_HUB_IMAGE}
        docker push ${DOCKER_HUB_IMAGE}
